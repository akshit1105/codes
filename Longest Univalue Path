/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int helper(TreeNode* root,int &ans)
    {
        if(root==NULL)
            return 0;
        int left=helper(root->left,ans);
        int right=helper(root->right,ans);
        
        int al=0;
        int ar=0;
        
        if(root->left && root->left->val==root->val)
            al+=left+1;
        if(root->right && root->right->val==root->val)
            ar+=right+1;
        
        ans=max(ans,al+ar);
        return max(al,ar);
    }
    int longestUnivaluePath(TreeNode* root) {
       int ans=0;
        helper(root,ans);
        return ans;
    }
};
